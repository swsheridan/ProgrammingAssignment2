source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
getwd
getwd()
library(datasets)
data(iris)
tapply(iris[,1], iris$Species, mean)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$cly, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
x <- with(mtcars, tapply(hp, cyl, mean))
abs(x[1]-x[3])
?{}
x<- 5
y <- 2
x + y
+(x,y)
+ (x, y)
z <- +(x, y)
z <- +(x y)
x * y
z <- *(x, y)
#
setwd("~/DataScienceSpecialization/R_ProgrammingAssignment2")
source("cachematrix.R")
source("cachematrix.R")
amatrix <- makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
cacheSolve(amatrix)
amatrix$getinverse
source("cachematrix.R")
amatrix <- makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$getinverse()
cacheSolve(amatrix)
amatrix <- makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
print amatrix
str(amatrix)
amatrix()
amatrix$get()
cacheSolve(amatrix)
source("cachematrix.R")
amatrix <- makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
x <- get()
x <- amatrix$get()
print x
amatrix$get()
cacheSolve(amatrx)
cacheSolve(amatrix)
source("cachematrix.R")
amatrix <- makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
source("cahcematrix.R")
source("cachematrix.R")
amatrix <- makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
cacheSolve(amatrix)
amatrix$getinverse()
cacheSolve(amatrix)
cacheSolve(amatrix)
amatrix$setmatrx(matrix(c(1:9), nrow=3, ncol=3))
newmatrix <- matrix(c(1,2,3,4) nrow=4, ncol=4)
newmatrix <- matrix(c(1,2,3,4), nrow=4, ncol=4)
amatrix$set(newmatrix)
cacheSolve(amatrix)
amatrix <- makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
cacheSolve(amatrix)
cacheSolve(amatrix)
amatrix$set(matrix(c(0,5,99,66), nrow=2, ncol=2))
cacheSolve(amatrix)
amatrix$get()
amatrix$getinverse()
source("cachematrix.R")
source("cachematrix.R")
amatrix <- makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
cacheSolve(amatrix)
cacheSolve(amatrix)
amatrix$getinverse()
amatrix$set(matrix(c(0,5,99,66), nrow=2, ncol=2))
amatrix$get()
cacheSolve(amatrix)
cacheSolve(amatrix)
amatrix$getinverse()
amatrix$get()
